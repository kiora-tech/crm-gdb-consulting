monolog:
    channels:
        - deprecation # Canal dédié pour les messages de dépréciation
        - sentry # Canal dédié pour les messages Sentry

when@dev:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                channels: ["!event"]
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine", "!console"]

when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                channels: ["!event"]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug

when@prod:
    monolog:
        handlers:
            # Ce handler capture uniquement les erreurs et exceptions pour Sentry
            sentry:
                type: sentry
                level: error # Uniquement les erreurs sont envoyées à Sentry
                hub_id: Sentry\State\HubInterface
                channels: ["!deprecation"] # Exclure les dépréciations

            # Ce handler utilise fingers_crossed pour capturer le contexte autour des erreurs
            main:
                type: fingers_crossed
                action_level: error
                handler: grouped
                excluded_http_codes: [404, 405]
                buffer_size: 50
                channels: ["!sentry"] # Éviter la duplication avec le handler sentry

            # Groupe de handlers pour les logs locaux
            grouped:
                type: group
                members: [file, stderr]

            # Logs dans un fichier
            file:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                formatter: monolog.formatter.json

            # Logs pour Docker/Stdout
            stderr:
                type: stream
                path: php://stderr
                level: debug
                formatter: monolog.formatter.json

            # Console logs
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine"]

            # Gérer les dépréciations séparément
            deprecation:
                type: stream
                channels: [deprecation]
                path: php://stderr
                formatter: monolog.formatter.json

services:
    # Processer les placeholders PSR-3 pour Sentry
    Monolog\Processor\PsrLogMessageProcessor:
        tags: { name: monolog.processor, handler: sentry }